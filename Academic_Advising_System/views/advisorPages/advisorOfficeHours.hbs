<style>
    th {
        width: 10%;
        margin: 10px;
        padding: 10px;
    }

    td {
        text-align: center;
        vertical-align: middle;
        width: auto;
        margin: 10px;
        padding: 10px;

    }
</style>
<main class="main-content">
    <div class="content">
        <div class="body-header">
            <header>
                <h1><span class="trn">Office Hours</span></h1>
            </header>
            <hr>
        </div>


        <div class="body-content">
            <div id="error-msg"></div>
            <div id="success-msg"></div>
            <div class="py-4">
                <div class="container">
                    <div class="mb-3 px-2 py-5 border border-1">

                        {{#each times}}
                            <div class="row m-1 py-4 px-1 border border-1">
                                <div class="col-md-2">
                                    <h5 style="text-transform: capitalize;">{{this}}: </h5>
                                </div>
                                <div> 
                                    <div id="{{@key}}">
                                        {{!-- this will be the template that all others fallow --}}
                                        <div class="row" id="{{@key}}-0">
                                            <div class="col-md-6 form-group d-inline">
                                                <div class="input-group">
                                                    <span class="input-group-text">from</span>
                                                    <input class="form-control" type="time" oninput="removeErrorMsg()" id="{{@key}}-0-from">
                                                </div>
                                            </div>

                                            <div class="col-md-6 form-group d-inline">
                                                <div class="input-group">
                                                    <span class="input-group-text">to</span>
                                                    <input class="form-control" type="time" oninput="removeErrorMsg()" id="{{@key}}-0-to">
                                                </div>
                                            </div>
                                        </div>

                                    </div>

                                    <div class="row d-flex justify-content-end">
                                        <button style="max-width:40px; margin:auto;" class="mt-2 btn btn-primary" onclick="addNewDate('{{@key}}')">+</button>
                                        <button style="max-width:40px; margin:auto;" class="mt-2 btn btn-danger" onclick="deleteDate('{{@key}}')">-</button>
                                    </div>

                                </div>
                            </div>
                        {{/each}}
                         
                        <div class="mt-5">
                            <hr>
                            <button class="btn btn-success" onclick="submit()">Submit Dates</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <script>

        const dateAreas = ['sun-time', 'mon-time', 'tue-time', 'wed-time','thu-time'];
        
        function removeErrorMsg(){
            console.log('helloo people')
            document.querySelectorAll('i').forEach((elem) => {
                elem.remove()
            })
            let errorMsg = document.getElementById('error-msg') ;
            errorMsg.classList.remove('alert','alert-danger')
            errorMsg.innerText = ""
        }
        
        function deleteDate(area) {

            let timeArea = document.getElementById(area)
            let lastElementID = timeArea.childElementCount - 1
            
            if(lastElementID > 0){
                timeArea.children[lastElementID].remove()
            } else {
                let errorMsg = document.getElementById('error-msg') ;
                errorMsg.classList.add('alert','alert-danger')
                errorMsg.innerText = `Deleting last time for ${area.replace('-', ' ')} is not adequate`

                setTimeout(()=> {
                    errorMsg.classList.remove('alert','alert-danger')
                    errorMsg.innerText = ""
                },2000)
            }
        }

        function addNewDate(area) {
            
            let updateArray = document.getElementById(area)
            // we need to get this id and append to it
            let div = document.createElement('div')
            let id = updateArray.childElementCount
            div.innerHTML = `
                <div class="my-1 row" id="${area}-${id}">
                    <div class="col-md-6 form-group d-inline">
                        <div class="input-group">
                            <span class="input-group-text">from</span> 
                            <input class="form-control" type="time" oninput="removeErrorMsg()" id="${area}-${id}-from">
                        </div>
                    </div>

                    <div class="col-md-6 form-group d-inline">
                        <div class="input-group">
                            <span class="input-group-text">to</span>
                            <input class="form-control" type="time" oninput="removeErrorMsg()" id="${area}-${id}-to">
                        </div>
                    </div>
                </div>`
            updateArray.append(div)
        }

        function submit() {
            let noErrors = true ;
            // here we want to take the times that are in the sun-area, mon-area and so on
            let submittedDays = {} // array of objects, on back send it as objects
            for (let dayArea of dateAreas) {
                submittedDays[dayArea] = []
                if (document.getElementById(dayArea)) {
                    let areaTimes = document.getElementById(dayArea).childElementCount;
                    for (let i = 0; i < areaTimes; i++) {

                        // get the values of each input
                        let fromTime = document.getElementById(`${dayArea}-${i}-from`).value
                        let toTime = document.getElementById(`${dayArea}-${i}-to`).value

                        if( i > 0 && (!fromTime || !toTime) ){
                            noErrors = false;
                            let errorMsg = document.getElementById('error-msg') ;
                            errorMsg.classList.add('alert','alert-danger')
                            errorMsg.innerText = "There are some empty dates"
                            let hint = document.createElement('i')
                            hint.innerText = '*'
                            hint.style.color = 'RED'
                            document.getElementById(`${dayArea}-${i}`).prepend(hint);
                            break ;
                        }
                        // want to convert the times then compare between them
                        console.log(fromTime, toTime)
                        let numFromTime = (parseInt(fromTime.split(':')[0]) * 60) + parseInt(fromTime.split(':')[1])
                        let numToTime = (parseInt(toTime.split(':')[0]) * 60) + parseInt(toTime.split(':')[1])

                        if(numToTime < numFromTime){
                            // show error msg  class="alert alert-danger"
                            noErrors = false;
                            let errorMsg = document.getElementById('error-msg') ;
                            errorMsg.classList.add('alert','alert-danger')
                            errorMsg.innerText = "There are some conflicts in dates"
                            let hint = document.createElement('i')
                            hint.innerText = '*'
                            hint.style.color = 'RED'
                            document.getElementById(`${dayArea}-${i}`).prepend(hint)
                            continue ;
                        }
                        let toFromScheduleForDay = {
                            from: fromTime,
                            to: toTime,
                        }
                        submittedDays[dayArea].push(toFromScheduleForDay)
                        console.log('the time is good..')
                        // 

                    }
                }
            }
            if(noErrors){
                $.ajax({
                    method: 'post',
                    url: "/advisor/scheduling",
                    data: {times: submittedDays }
                })
                .done((value) => {
                    console.log('we have the value of the call back')
                    
                    let successMsg = document.getElementById('success-msg') ;
                    successMsg.classList.add('alert','alert-success')
                    successMsg.innerText = "Office Hours been Updated Successfully"
                    setTimeout(()=> {
                        successMsg.classList.remove('alert','alert-success')
                        successMsg.innerText = ""
                    },3000)
                    console.log(value)
                })
            }
            console.log(submittedDays)
            // once finished with the for loop then make the request to server
        }
    
    </script>

</main>